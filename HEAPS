1. sliding window maximum (HARD) --------  time complexity  k log k
 vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        map<int,int> mp;
        for(int i = 0; i < k; i++)    mp[nums[i]]++;

        int i = 0, j = k-1;
        vector<int> ans;
        do{
            auto it = mp.end();
            it--;
            int largest = it->first;
            ans.push_back(largest);
            mp[nums[i]]--;
            if(mp[nums[i]] == 0)    mp.erase(nums[i]);
            if(j+1 < nums.size())   mp[nums[j+1]]++;
            i++;
            j++;
        }while(j < nums.size());
        return ans;
    }
